<div class="flex flex-col md:flex-row md:justify-between items-start md:items-center mb-4 md:max-w-[390px] mx-auto">
  <h1 class="text-xl font-bold border-b pb-2">Cards</h1>
  <% if user_signed_in? %>
    <div class="text-xs md:text-sm mt-2 md:mt-0">
      <p>My favorite count: <%= current_user.favorites.count %></p>
      <p>My watch list count: <%= current_user.watchlists.count %></p>
    </div>
  <% end %>
</div>

<% if user_signed_in? %>
  <div class="md:max-w-[390px] mx-auto">
    <%= form_with url: cards_path, method: :get, local: true, class: 'flex', id: 'sort_form' do |form| %>
  <%= form.select :sort, [['Select a filter', nil], ['all', 'all'], ['my list', 'own'], ['watch list', 'watch']], {}, { id: 'sort_dropdown' } %>
<% end %>

  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const dropdown = document.getElementById('sort_dropdown');
  if (dropdown) {
    dropdown.addEventListener('change', function() {
      const form = document.getElementById('sort_form');
      if (form) {
        form.submit();
      }
    });
  }
});
</script> 

<div class="mx-auto max-w-screen-md p-4">
  <% @cards.each do |card| %>
    <div class="bg-white shadow-lg rounded-lg mb-6 p-4 relative">
      <div class="absolute top-2 right-2 z-10 flex space-x-2">
        <% if current_user == card.user %>
          <% if !current_user.favorites.exists?(card_id: card.id) %>
            <%= button_to favorites_path(card_id: card.id), class: 'rounded-full p-2 m-1 bg-green-300 hover:bg-green-400 w-20 h-10' do %>
              Unlike
            <% end %>
          <% else %>
            <%= button_to favorite_path(current_user.favorites.find_by(card_id: card.id)), method: :delete, class: 'rounded-full p-2 m-1 bg-red-300 hover:bg-red-400 w-20 h-10' do %>
              Like
            <% end %>
          <% end %>
        <% end %>

        <% if current_user && current_user != card.user %>
          <% if current_user.watching?(card) %>
            <%= button_to watchlist_path(current_user.watchlists.find_by(card: card)), method: :delete, class: 'p-2 m-1 bg-yellow-300 hover:bg-yellow-400 w-20 h-10' do %>
              Watch
            <% end %>
          <% else %>
            <%= button_to watchlists_path(card_id: card.id), class: 'p-2 m-1 bg-blue-300 hover:bg-blue-400 w-20 h-10' do %>
              Unwatch
            <% end %>
          <% end %>
        <% end %>
      </div>

      <div class="flex flex-col space-y-10 pt-10">
        <div class="flex items-center space-x-4">
          <img src="<%= card.book.image_url %>" alt="Book Cover" class="w-20 h-28 object-cover rounded-lg">
          <div>
            <h2 class="text-xl font-semibold mb-2"><%= card.book.title %></h2>
            <p><strong>投稿者:</strong> <%= card.user ? card.user.name : "不明" %></p>
            <p><strong>著者:</strong> <%= card.book.author %></p>
            <p><strong>出版社:</strong> <%= card.book.publisher %></p>
            <p><strong>出版日:</strong> <%= card.book.published_date %></p>
          </div>
        </div>
        <div>
          <p class="mt-1 text-gray-500 text-sm"><strong>投稿日:</strong> <%= card.created_at.strftime("%Y-%m-%d %H:%M:%S") %></p>
        </div>
        
        <div class="mt-2 flex space-x-2">
          <%= link_to '詳細', card_path(card), class: 'flex-1 px-4 py-2 bg-teal-300 text-white rounded hover:bg-teal-400 text-center' %>
          <% if current_user == card.user %>
            <%= link_to '編集', edit_card_path(card), class: 'flex-1 px-4 py-2 bg-blue-300 text-white rounded hover:bg-blue-400 text-center' %> 
            <%= button_to '削除', card, method: :delete, class: 'flex-1 px-4 py-2 bg-red-300 text-white rounded hover:bg-red-400 text-center', data: { confirm: '本当に削除しますか？' } %>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
</div>

<script>
// ページを離れる前にスクロール位置をセッションストレージに保存
window.addEventListener('beforeunload', function () {
  sessionStorage.setItem('scrollPosition', window.scrollY.toString());
});

// ページが読み込まれたときにスクロール位置をセッションストレージから読み出し
window.addEventListener('DOMContentLoaded', (event) => {
  const savedScrollPosition = sessionStorage.getItem('scrollPosition');
  if (savedScrollPosition) {
    window.scrollTo(0, parseInt(savedScrollPosition));
  }
});
</script>